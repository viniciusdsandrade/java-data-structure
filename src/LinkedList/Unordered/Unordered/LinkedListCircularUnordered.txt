public class LinkedListCircularDisordered<X> implements Cloneable {
    
   public class Node implements Cloneable {
        public X elemento;
        public Node proximo;

        public Node() {}
        public Node(X elemento) {}
        public X getElemento() {}
        public Node getProximo() {}        
        public Node(Node modelo)  {}

        @Override
        public Object clone() {}

        @Override
        public boolean equals(Object obj) {}

        @Override
        public int hashCode() {}

        @Override
        public String toString() {}
    }

    public Node primeiro;
    public Node ultimo;
    public int tamanho;

    public LinkedListCircularDisordered() {}
    public Node getPrimeiro() {}
    public Node getUltimo() {}
    public int getTamanho() {}
    public void addFirst(X elemento) {}
    public void addLast(X elemento) {}
    public void addAt(int posicao, X elemento) {}
    public X getFirst() {}
    public X getLast() {}
    public X get(int posicao) {}
    public void removeFirst() {}
    public void removeLast() {}
    public void removeAt(int posicao) {}
    public boolean contains(X elemento) {}
    public int indexOf(X elemento) {}
    public boolean isEmpty() {}
    public void clear() {}
    public void rotate(int passos){}

    public LinkedListCircularDisordered(LinkedListCircularDisordered<X> modelo)  {}

    @Override
    public Object clone() {}

    @Override
    public boolean equals(Object obj) {}

    @Override
    public int hashCode() {}

    @Override
    public String toString() {}
}